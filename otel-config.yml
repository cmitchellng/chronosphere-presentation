# OpenTelemetry Collector config that uses exec receiver and metrics exporter

# Pulls metrics from from mounted metrics file using the filelog receiver
receivers:
  filelog:
    include: ["/var/metrics/mock_metrics.out"]
    start_at: beginning
    operators:
      - type: regex_parser
        regex: '^snowflake_credits_used{warehouse="(?P<warehouse>[^"]+)"} (?P<value>[0-9.]+)$'
        parse_to: body

# Example for real integration
# receivers:
#   snowflake:
#     username: <SNOWFLAKE_USER>
#     password: <PASSWORD>
#     account: <accountName>.<accountRegion>
#     warehouse: <WAREHOUSE>
#     role: <ROLE_OF_SNOWFLAKE>
#     schema: ACCOUNT_USAGE
#     database: SNOWFLAKE
#     collection_interval: 5m
#     metrics:
#       snowflake.storage.stage_bytes.total:
#         enabled: true
#       snowflake.storage.storage_bytes.total:
#         enabled: true
#       snowflake.database.query.count:
#         enabled: true
#       snowflake.pipe.credits_used.total:
#         enabled: true
#       snowflake.query.blocked:
#         enabled: true
#       snowflake.billing.warehouse.cloud_service.total:
#         enabled: true
#       snowflake.billing.virtual_warehouse.total:
#         enabled: true
#       snowflake.billing.cloud_service.total:
#         enabled: true
#       snowflake.billing.total_credit.total:
#         enabled: true
#       snowflake.logins.total:
#         enabled: true
#       snowflake.session_id.count:
#         enabled: true

processors:
  batch:

# Export to command line
exporters:
  debug:
    verbosity: detailed

# Example for real integration
# exporters:
#   otlp/chronosphere:
#     endpoint: <ADDRESS>
#     timeout: 30s
#     retry_on_failure:
#       enabled: true
#     sending_queue:
#       num_consumers: 50
#     # Valid values are snappy, gzip, zstd and none.
#     compression: zstd
#     headers:
#       API-Token: ${env:$API_TOKEN}
#       Chronosphere-Metrics-Validation-Response: SHORT

service:
  pipelines:
    logs:
      receivers: [filelog]
      processors: [batch]
      exporters: [debug]

# Example for real integration
# service:
#   telemetry:
#     logs:
#       level: "debug"
#   pipelines:
#     metrics:
#       receivers: [snowflake]
#       exporters: [otlphttp/chronosphere]